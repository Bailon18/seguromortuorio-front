package com.museo.controladores;

import com.museo.modelo.entidades.EquipoTipo;
import com.museo.modelo.entidades.Equipos;
import com.museo.modelo.servicios.EquiposService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/equipos")
@CrossOrigin(origins = {"*"})
public class EquiposController {

    @Autowired
    private EquiposService equiposService;

    @GetMapping("/")
    public List<Equipos> listarEquipos() {
        return equiposService.listarEquiposDescendente();
    }

    @GetMapping("/{id}")
    public Equipos obtenerEquipoPorId(@PathVariable Long id) {
        return equiposService.obtenerEquipoPorId(id);
    }
    
    @PostMapping("/")
    public Equipos crearEquipo(
            @RequestBody Equipos equipo) {
        return equiposService.crearEquipo(equipo);
    }


    @DeleteMapping("/{id}")
    public void eliminarEquipo(@PathVariable Long id) {
        equiposService.eliminarEquipo(id);
    }
    
    @GetMapping("/{equipoId}/equipotipo")
    public ResponseEntity<List<EquipoTipo>> getEquipoTipoByEquipoId(@PathVariable Long equipoId) {
        // Primero, verifica si el Equipo con el ID proporcionado existe
        if (!equipoService.existsById(equipoId)) {
            return new ResponseEntity<>(HttpStatus.NOT_FOUND);  // Devuelve un c√≥digo 404 si el Equipo no existe
        }

        // Llama al servicio para obtener los EquipoTipo relacionados con el Equipo
        List<EquipoTipo> equipoTipos = equipoTipoService.findEquipoTipoByEquiposId(equipoId);
        return new ResponseEntity<>(equipoTipos, HttpStatus.OK);
    }
}